FROM ubuntu:16.04

MAINTAINER Pramendra Kumar <pramendra.kumar@amd.com>

ARG ROCM_PATH=/opt/rocm
ARG rocm_rel
ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root/

ADD apt /root/apt
WORKDIR /root/apt
#RUN cp -rf /root/apt/sources.list /etc/apt/
RUN cp -rf /root/apt/resolv.conf /etc/

RUN apt-get clean all

# Install required python2 packages
RUN apt-get -y update --fix-missing --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get install -y git dkms cmake flex bison aria2 check xsltproc cifs-utils vim ssh dos2unix python-pip-whl libpci3  libelf1 g++-multilib gcc-multilib libunwind-dev libnuma-dev bzip2

RUN apt-get clean all
RUN rm -rf /var/lib/apt/lists/*



# Install the ROCm components
ADD driver /root/driver
WORKDIR /root/driver


#====================== for external repo ========================
#RUN wget -qO - http://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add -
#RUN sh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main > /etc/apt/sources.list.d/rocm.list'
#RUN apt-get -y update
#RUN apt-get install -y hsakmt-roct* hsakmt-roct-dev*
#RUN apt-get install -y hsa-ext-rocr-dev* hsa-rocr-dev*
#RUN apt-get install -y rocm-opencl* rocm-opencl-devel* rocm-smi* rocm-utils* rocminfo*  hcc* atmi* hip* hsa-amd-aqlprofile* rocm-clang-ocl*
#RUN apt-get install -y rocm-profiler cxlactivitylogger miopen-hip miopengemm rocblas rocrand rocfft hipblas
# =============for internal repo======================
RUN sh -c 'echo deb [arch=amd64] http://172.27.226.104/artifactory/list/rocm-dkms-release-$rocm_rel-ubuntu/ xenial main > /etc/apt/sources.list.d/rocm.list'
RUN apt-get -y update --allow-unauthenticated
RUN apt-get install -y --allow-unauthenticated hsakmt-roct* hsakmt-roct-dev*
RUN apt-get install -y --allow-unauthenticated hsa-ext-rocr-dev* hsa-rocr-dev*
RUN apt-get install -y --allow-unauthenticated rocm-opencl* rocm-smi* rocm-utils* rocminfo*  hcc*  hip_base* hip_doc hip_hcc* hip_samples hsa-amd-aqlprofile rocm-clang-ocl rocm-cmake
RUN apt-get install -y --allow-unauthenticated rocm-profiler cxlactivitylogger miopen-hip miopengemm rocblas rocrand rocfft hipblas rocsparse hipsparse

#RUN dpkg -i hsakmt-roct*.deb hsakmt-roct-dev*.deb
#RUN dpkg -i hsa-ext-rocr-dev*.deb hsa-rocr-dev*.deb
#RUN dpkg -i rocm-opencl*.deb rocm-opencl-dev*.deb rocm-smi*.deb rocm-utils*.deb rocminfo*.deb  hcc*.deb hip_base*.deb hip_doc*.deb hip_hcc*.deb hip_samples*.deb hsa-amd-aqlprofile*.deb rocm-clang-ocl*.deb  rocprofiler-dev*.deb atmi*.deb llvm-amdgpu*.deb rocm-cmake*.deb rocm-dev*.deb rocm-device-libs*.deb

RUN echo "gfx906" > /opt/rocm/bin/target.lst
RUN echo "gfx900" >> /opt/rocm/bin/target.lst
RUN echo "gfx803" >> /opt/rocm/bin/target.lst

RUN cp -rf /root/driver/half.hpp /opt/rocm/include

ENV HCC_HOME=$ROCM_PATH/hcc
ENV HIP_PATH=$ROCM_PATH/hip
ENV OPENCL_ROOT=$ROCM_PATH/opencl
ENV PATH="$HCC_HOME/bin:$HIP_PATH/bin:${PATH}"
ENV PATH="$ROCM_PATH/bin:${PATH}"
ENV PATH="$OPENCL_ROOT/bin/x86_64:${PATH}"

ARG HCC_HOME=/opt/rocm/hcc
ARG HIP_PATH=/opt/rocm/hip
ARG PATH=$HCC_HOME/bin:$HIP_PATH/bin:$PATH

RUN rm -rf ~/.cache/*


#RUN git clone https://github.com/ROCm-Developer-Tools/HIP
#WORKDIR $HOME/driver/HIP
#RUN echo y | ./install.sh

RUN rm -rf /etc/apt/sources.list.d/rocm.list
RUN apt-get -y update --allow-unauthenticated

WORKDIR $HOME/driver/

RUN git clone -b master https://streamhsa:AH64_uh1@github.com/ROCmSoftwarePlatform/rocblas
WORKDIR rocblas
RUN dos2unix install.sh
RUN ./install.sh -cd 2>&1 | tee rocblas-build.log

WORKDIR /root/driver
RUN git clone -b master https://streamhsa:AH64_uh1@github.com/ROCmSoftwarePlatform/hipblas
WORKDIR  hipblas
RUN dos2unix install.sh
RUN ./install.sh -cd 2>&1 | tee hipblas-build.log

WORKDIR /root/driver
RUN git clone -b master https://streamhsa:AH64_uh1@github.com/ROCmSoftwarePlatform/rocrand.git
WORKDIR rocrand
#RUN sed -i 's/const distribution_func_type\& distribution_func)/const distribution_func_type\& distribution_func) __attribute__((cpu))/g' test/crush/stat_test_common.hpp
RUN rm -rf build
RUN mkdir build
WORKDIR build
RUN mv /usr/local/lib/libgtest.a /usr/local/lib/libgtest_old.a
RUN CXX=/opt/rocm/hcc/bin/hcc  cmake -DBUILD_TEST=ON -DBUILD_BENCHMARK=ON -DBUILD_CRUSH_TEST=ON -DDEPENDENCIES_FORCE_DOWNLOAD=ON ../.
RUN make -j16 2>&1 | tee rocrand-build.log
RUN make package

WORKDIR /root/driver
RUN apt-get -y install libboost-program-options-dev libfftw3-dev cmake-qt-gui
RUN git clone -b master https://streamhsa:AH64_uh1@github.com/ROCmSoftwarePlatform/rocfft
WORKDIR rocfft
RUN dos2unix install.sh
RUN ./install.sh -cd 2>&1 | tee rocfft-build.log

WORKDIR /root/driver
RUN git clone -b master https://github.com/ROCmSoftwarePlatform/rocsparse.git
WORKDIR /root/driver/rocsparse
RUN dos2unix install.sh
RUN ./install.sh -cd 2>&1 | tee rocsparse-build.log

WORKDIR /root/driver
RUN git clone -b master https://github.com/ROCmSoftwarePlatform/hipsparse.git
WORKDIR /root/driver/hipsparse
RUN dos2unix install.sh
RUN ./install.sh -cd 2>&1 | tee hipsparse-build.log


WORKDIR /root/driver
RUN cp -rf /root/driver/half.hpp $ROCM_PATH/include
RUN mkdir hip-mlopen
WORKDIR hip-mlopen 
RUN apt-get -y install libelf-dev
RUN apt-get -y install libssl-dev libboost-all-dev
RUN ln -s /usr/include/x86_64-linux-gnu/openssl/opensslconf.h /usr/include/openssl


WORKDIR /root/driver/hip-mlopen
RUN git clone -b develop https://streamhsa:AH64_uh1@github.com/AMDComputeLibraries/MLOpen.git
WORKDIR  MLOpen
RUN sed -i 's/gfx803/gfx906/g' CMakeLists.txt 
RUN rm -rf build
RUN mkdir build
WORKDIR build
RUN CXX=/opt/rocm/hcc/bin/hcc cmake -DMIOPEN_TEST_ALL=ON -DMIOPEN_BACKEND=HIP -DMIOPEN_MAKE_BOOST_PUBLIC=ON -DCMAKE_PREFIX_PATH="/opt/rocm/hcc;/opt/rocm/hip" -DCMAKE_CXX_FLAGS="-isystem /usr/include/x86_64-linux-gnu/" ..
RUN make -j16 2>&1 | tee hipmlopen-build.log
RUN make package 2>&1 | tee -a hipmlopen-build.log

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/rocm/lib:/opt/rocm/rccl/lib
ENV PATH=/opt/rocm/bin:$PATH
ENV HCC_HOME=/opt/rocm/hcc
ENV HIP_PATH=/opt/rocm/hip
ENV PATH=$HCC_HOME/bin:$HIP_PATH/bin:$PATH

WORKDIR /root/driver

RUN apt-get -y install pkg-config protobuf-compiler libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev liblmdb-dev python-numpy python-scipy python3-dev python-yaml python-pip libopencv-dev libfftw3-dev libelf-dev libopenblas-base libopenblas-dev

RUN git clone -b hip https://github.com/rocmsoftwareplatform/hipcaffe
WORKDIR /root/driver/hipcaffe
ENV PATH=/opt/rocm/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH
ENV INCLUDE_DIR=/opt/rocm/include
RUN cp Makefile.config.example Makefile.config
#RUN  sed -i 's/atlas/open/g' Makefile.config
#RUN  sed -i 's/# OPENCV_VERSION := 3/OPENCV_VERSION := 3/g' Makefile.config

RUN make -j16 2>&1 | tee hipcaffe_build.log


RUN ./data/ilsvrc12/get_ilsvrc_aux.sh 2>&1 | tee -a  hipcaffe_build.log
RUN ./scripts/download_model_binary.py models/bvlc_reference_caffenet 2>&1 | tee -a hipcaffe_build.log

RUN ./data/cifar10/get_cifar10.sh 2>&1 | tee -a hipcaffe_build.log
RUN ./examples/cifar10/create_cifar10.sh 2>&1 | tee -a hipcaffe_build.log

RUN ./data/mnist/get_mnist.sh 2>&1 | tee -a hipcaffe_build.log
RUN ./examples/mnist/create_mnist.sh 2>&1 | tee -a hipcaffe_build.log

WORKDIR /root/driver
RUN rm -rf rccl
RUN git clone https://github.com/ROCmSoftwarePlatform/rccl
WORKDIR /root/driver/rccl
RUN mkdir build
WORKDIR /root/driver/rccl/build
RUN CXX=/opt/rocm/bin/hcc cmake ..
RUN make -j8 package
RUN dpkg -i *.deb


WORKDIR /root/driver
RUN git clone https://streamhsa:AH64_uh1@github.com/ROCmSoftwarePlatform/deepbench
WORKDIR /root/driver/deepbench/code/amd
RUN sed -i 's/-O3/-O3 -I\/opt\/rocm\/include/g' Makefile
RUN make all 2>&1 | tee deepbench_build.log


WORKDIR $HOME/driver

#Install Pre-Req for pyhton2 based
#RUN apt-get install -y python-numpy python-dev python-pip python-wheel python-yaml python-future python-mock python-setuptools

#Install Pre-Req for pyhton3 based
RUN apt-get install -y python3-numpy python3-dev python3-pip python3-wheel python3-yaml python3-future python3-mock python3-setuptools


RUN apt-get install -y curl
#RUN pip install numpy absl-py keras
RUN pip3 install numpy absl-py keras



# Install Bazel
RUN wget https://github.com/bazelbuild/bazel/releases/download/0.15.2/bazel-0.15.2-installer-linux-x86_64.sh
RUN apt-get install -y openjdk-8-jre pkg-config zip g++ zlib1g-dev unzip python
RUN chmod 775 *.sh
RUN dos2unix *.sh
RUN $HOME/driver/bazel-0.15.2-installer-linux-x86_64.sh

ARG HCC_HOME=/opt/rocm/hcc
ARG HIP_PATH=/opt/rocm/hip
ARG PATH=$HCC_HOME/bin:$HIP_PATH/bin:$PATH

# Clone TF

RUN cd $HOME  && git clone -b r1.11-rocm https://github.com/ROCmSoftwarePlatform/tensorflow-upstream tensorflow
WORKDIR $HOME/tensorflow

# Build TF for python2
#RUN PYTHON_BIN_PATH=/usr/bin/python3 cat ./configure_rocm | ./configure
#RUN yes "" | PYTHON_BIN_PATH=/usr/bin/python3 ./configure
#RUN sed -i 's/tensorflow-1.10.0rc1-cp27-cp27mu-linux_x86_64.whl/tensorflow-*.whl/g' build_rocm
#RUN bash $HOME/tensorflow/build_rocm


# Build TF for python3
#RUN yes "" | PYTHON_BIN_PATH=/usr/bin/python3 ./configure
RUN sed -i 's/tensorflow-1.11.0-cp35-cp35m-linux_x86_64.whl/tensorflow-*.whl/g' build_rocm_python3
RUN $HOME/tensorflow/build_rocm_python3 2>&1 | tee tf1.11_build.log

# Clone hiptf models and benchmarks
#RUN cd $HOME/tensorflow  && git clone https://github.com/soumith/convnet-benchmarks.git
RUN cd $HOME/ && git clone https://github.com/tensorflow/models.git

# TF/benchmarks with some workarounds for TF1.3 & for ImageNet
RUN cd $HOME/ && git clone https://github.com/tensorflow/benchmarks.git
WORKDIR $HOME/benchmarks
RUN git checkout -b may22 ddb23306fdc60fefe620e6ce633bcd645561cb0d
RUN sed -i 's|from tensorflow.contrib import nccl|#from tensorflow.contrib import nccl|g' ./scripts/tf_cnn_benchmarks/variable_mgr.py

RUN sh -c 'echo deb [arch=amd64] http://172.27.226.104/artifactory/list/rocm-dkms-release-$rocm_rel-ubuntu/ xenial main > /etc/apt/sources.list.d/rocm.list'
RUN apt-get -y update --allow-unauthenticated


WORKDIR $HOME
